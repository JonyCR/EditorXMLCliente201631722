
//----------------------------------------------------
// The following code was generated by CUP v0.11a beta 20060608
// Mon Apr 08 22:23:53 CST 2019
//----------------------------------------------------

package backend.analizadores;

import backend.objetos.*;
import java_cup.runtime.Symbol;
import java.util.ArrayList;

/** CUP v0.11a beta 20060608 generated parser.
  * @version Mon Apr 08 22:23:53 CST 2019
  */
public class Analisis_Sintactico extends java_cup.runtime.lr_parser {

  /** Default constructor. */
  public Analisis_Sintactico() {super();}

  /** Constructor which sets the default scanner. */
  public Analisis_Sintactico(java_cup.runtime.Scanner s) {super(s);}

  /** Constructor which sets the default scanner. */
  public Analisis_Sintactico(java_cup.runtime.Scanner s, java_cup.runtime.SymbolFactory sf) {super(s,sf);}

  /** Production table. */
  protected static final short _production_table[][] = 
    unpackFromStrings(new String[] {
    "\000\142\000\002\002\004\000\002\002\003\000\002\027" +
    "\012\000\002\027\003\000\002\030\003\000\002\030\004" +
    "\000\002\011\003\000\002\011\003\000\002\011\003\000" +
    "\002\011\003\000\002\011\003\000\002\011\003\000\002" +
    "\011\003\000\002\011\003\000\002\053\002\000\002\004" +
    "\016\000\002\024\012\000\002\032\013\000\002\032\014" +
    "\000\002\031\005\000\002\031\005\000\002\031\005\000" +
    "\002\031\005\000\002\031\005\000\002\005\015\000\002" +
    "\033\012\000\002\034\015\000\002\006\015\000\002\035" +
    "\012\000\002\036\015\000\002\003\016\000\002\003\015" +
    "\000\002\054\002\000\002\013\013\000\002\015\003\000" +
    "\002\015\004\000\002\016\013\000\002\014\012\000\002" +
    "\017\003\000\002\017\004\000\002\020\011\000\002\012" +
    "\005\000\002\012\005\000\002\012\005\000\002\012\005" +
    "\000\002\012\005\000\002\012\005\000\002\012\005\000" +
    "\002\012\005\000\002\042\012\000\002\043\013\000\002" +
    "\043\014\000\002\044\005\000\002\044\005\000\002\044" +
    "\005\000\002\044\005\000\002\044\005\000\002\044\005" +
    "\000\002\044\005\000\002\044\004\000\002\045\003\000" +
    "\002\045\003\000\002\045\003\000\002\045\003\000\002" +
    "\007\015\000\002\037\012\000\002\041\030\000\002\010" +
    "\015\000\002\025\013\000\002\021\013\000\002\021\014" +
    "\000\002\022\005\000\002\022\005\000\002\022\005\000" +
    "\002\023\003\000\002\023\003\000\002\023\003\000\002" +
    "\023\003\000\002\023\003\000\002\047\012\000\002\050" +
    "\013\000\002\050\014\000\002\051\005\000\002\051\005" +
    "\000\002\051\005\000\002\051\005\000\002\051\005\000" +
    "\002\051\005\000\002\051\005\000\002\051\004\000\002" +
    "\052\003\000\002\052\003\000\002\052\003\000\002\052" +
    "\003\000\002\046\015\000\002\026\016\000\002\026\015" +
    "\000\002\040\037" });

  /** Access to production table. */
  public short[][] production_table() {return _production_table;}

  /** Parse-action table. */
  protected static final short[][] _action_table = 
    unpackFromStrings(new String[] {
    "\000\u017f\000\004\023\011\001\002\000\004\002\000\001" +
    "\002\000\006\002\ufff8\023\ufff8\001\002\000\006\002\ufff4" +
    "\023\ufff4\001\002\000\006\002\ufff5\023\ufff5\001\002\000" +
    "\006\002\ufffb\023\ufffb\001\002\000\006\010\021\016\022" +
    "\001\002\000\006\002\ufffa\023\ufffa\001\002\000\006\002" +
    "\ufff6\023\ufff6\001\002\000\004\002\ufffe\001\002\000\006" +
    "\002\ufff9\023\ufff9\001\002\000\004\002\020\001\002\000" +
    "\006\002\ufff7\023\ufff7\001\002\000\004\002\001\001\002" +
    "\000\004\021\034\001\002\000\004\034\023\001\002\000" +
    "\004\023\024\001\002\000\004\010\021\001\002\000\004" +
    "\023\ufffd\001\002\000\004\023\027\001\002\000\006\010" +
    "\021\033\031\001\002\000\004\023\ufffc\001\002\000\004" +
    "\016\032\001\002\000\004\034\033\001\002\000\004\002" +
    "\uffff\001\002\000\004\022\035\001\002\000\022\044\037" +
    "\050\040\054\045\055\041\056\036\057\044\062\042\063" +
    "\043\001\002\000\004\034\u0169\001\002\000\004\034\ufff3" +
    "\001\002\000\004\034\u0134\001\002\000\004\034\375\001" +
    "\002\000\004\034\233\001\002\000\004\034\143\001\002" +
    "\000\004\034\077\001\002\000\004\034\046\001\002\000" +
    "\004\023\050\001\002\000\004\023\073\001\002\000\004" +
    "\040\051\001\002\000\004\034\052\001\002\000\004\023" +
    "\054\001\002\000\004\023\067\001\002\000\004\037\055" +
    "\001\002\000\004\021\056\001\002\000\004\022\057\001" +
    "\002\000\004\006\060\001\002\000\004\034\061\001\002" +
    "\000\004\004\062\001\002\000\004\023\063\001\002\000" +
    "\004\033\064\001\002\000\004\037\065\001\002\000\004" +
    "\034\066\001\002\000\004\023\uffe7\001\002\000\004\033" +
    "\070\001\002\000\004\040\071\001\002\000\004\034\072" +
    "\001\002\000\004\023\uffe8\001\002\000\004\033\074\001" +
    "\002\000\004\010\075\001\002\000\004\034\076\001\002" +
    "\000\006\002\uffe9\023\uffe9\001\002\000\004\023\100\001" +
    "\002\000\004\040\106\001\002\000\004\023\102\001\002" +
    "\000\004\033\103\001\002\000\004\010\104\001\002\000" +
    "\004\034\105\001\002\000\006\002\uffc1\023\uffc1\001\002" +
    "\000\004\034\107\001\002\000\004\023\110\001\002\000" +
    "\004\037\116\001\002\000\004\023\112\001\002\000\004" +
    "\033\113\001\002\000\004\040\114\001\002\000\004\034" +
    "\115\001\002\000\004\023\uffc0\001\002\000\004\021\117" +
    "\001\002\000\004\022\120\001\002\000\004\006\121\001" +
    "\002\000\004\034\122\001\002\000\004\004\123\001\002" +
    "\000\004\023\124\001\002\000\004\033\125\001\002\000" +
    "\004\037\126\001\002\000\004\034\127\001\002\000\004" +
    "\023\130\001\002\000\004\037\131\001\002\000\004\021" +
    "\132\001\002\000\004\022\133\001\002\000\004\065\134" +
    "\001\002\000\004\034\135\001\002\000\004\004\136\001" +
    "\002\000\004\023\137\001\002\000\004\033\140\001\002" +
    "\000\004\037\141\001\002\000\004\034\142\001\002\000" +
    "\004\023\uffbf\001\002\000\004\023\145\001\002\000\004" +
    "\023\203\001\002\000\004\040\146\001\002\000\004\034" +
    "\147\001\002\000\004\023\150\001\002\000\004\037\151" +
    "\001\002\000\004\021\152\001\002\000\004\022\153\001" +
    "\002\000\004\006\154\001\002\000\004\034\155\001\002" +
    "\000\004\004\156\001\002\000\004\023\157\001\002\000" +
    "\004\033\160\001\002\000\004\037\161\001\002\000\004" +
    "\034\162\001\002\000\004\023\163\001\002\000\004\037" +
    "\164\001\002\000\004\021\165\001\002\000\004\022\166" +
    "\001\002\000\004\064\167\001\002\000\004\034\170\001" +
    "\002\000\004\041\171\001\002\000\004\023\172\001\002" +
    "\000\004\033\173\001\002\000\004\037\174\001\002\000" +
    "\004\034\175\001\002\000\004\023\176\001\002\000\004" +
    "\033\177\001\002\000\004\040\200\001\002\000\004\034" +
    "\201\001\002\000\004\023\uffa0\001\002\000\004\023\227" +
    "\001\002\000\006\033\204\035\205\001\002\000\004\010" +
    "\225\001\002\000\004\034\206\001\002\000\004\023\210" +
    "\001\002\000\004\023\220\001\002\000\004\005\212\001" +
    "\002\000\004\023\uffdb\001\002\000\004\036\213\001\002" +
    "\000\004\022\214\001\002\000\004\011\215\001\002\000" +
    "\004\033\216\001\002\000\004\034\217\001\002\000\004" +
    "\023\uffd9\001\002\000\006\005\212\033\222\001\002\000" +
    "\004\023\uffda\001\002\000\004\035\223\001\002\000\004" +
    "\034\224\001\002\000\004\023\uffdc\001\002\000\004\034" +
    "\226\001\002\000\006\002\uffa1\023\uffa1\001\002\000\004" +
    "\033\230\001\002\000\004\010\231\001\002\000\004\034" +
    "\232\001\002\000\006\002\uffa2\023\uffa2\001\002\000\004" +
    "\023\235\001\002\000\004\023\371\001\002\000\004\040" +
    "\236\001\002\000\004\034\237\001\002\000\004\023\241" +
    "\001\002\000\004\023\270\001\002\000\004\037\242\001" +
    "\002\000\004\021\243\001\002\000\004\022\244\001\002" +
    "\000\010\006\245\065\247\070\246\001\002\000\004\034" +
    "\266\001\002\000\004\034\257\001\002\000\004\034\255" +
    "\001\002\000\004\023\251\001\002\000\004\033\252\001" +
    "\002\000\004\037\253\001\002\000\004\034\254\001\002" +
    "\000\004\023\uffbc\001\002\000\004\004\256\001\002\000" +
    "\004\023\uffb9\001\002\000\014\015\263\032\265\043\260" +
    "\061\264\072\262\001\002\000\004\023\uffb6\001\002\000" +
    "\004\023\uffb8\001\002\000\004\023\uffb4\001\002\000\004" +
    "\023\uffb7\001\002\000\004\023\uffb3\001\002\000\004\023" +
    "\uffb5\001\002\000\004\004\267\001\002\000\004\023\uffba" +
    "\001\002\000\006\033\271\037\272\001\002\000\004\040" +
    "\302\001\002\000\004\021\273\001\002\000\004\022\274" +
    "\001\002\000\010\006\245\065\247\070\246\001\002\000" +
    "\004\023\276\001\002\000\004\033\277\001\002\000\004" +
    "\037\300\001\002\000\004\034\301\001\002\000\004\023" +
    "\uffbb\001\002\000\004\034\303\001\002\000\004\023\305" +
    "\001\002\000\004\023\uffbd\001\002\000\004\020\306\001" +
    "\002\000\004\034\307\001\002\000\004\023\311\001\002" +
    "\000\004\023\355\001\002\000\004\017\312\001\002\000" +
    "\004\021\313\001\002\000\004\022\314\001\002\000\022" +
    "\012\320\013\317\014\315\026\324\027\323\042\316\052" +
    "\322\067\321\001\002\000\004\034\353\001\002\000\004" +
    "\034\352\001\002\000\004\034\350\001\002\000\004\034" +
    "\346\001\002\000\004\034\344\001\002\000\004\034\336" +
    "\001\002\000\004\034\334\001\002\000\004\034\332\001" +
    "\002\000\004\023\326\001\002\000\004\033\327\001\002" +
    "\000\004\017\330\001\002\000\004\034\331\001\002\000" +
    "\004\023\uffb1\001\002\000\004\071\333\001\002\000\004" +
    "\023\uffab\001\002\000\004\025\335\001\002\000\004\023" +
    "\uffac\001\002\000\012\030\337\031\341\051\340\060\343" +
    "\001\002\000\004\023\uffa5\001\002\000\004\023\uffa6\001" +
    "\002\000\004\023\uffa7\001\002\000\004\023\uffae\001\002" +
    "\000\004\023\uffa4\001\002\000\004\004\345\001\002\000" +
    "\004\023\uffa9\001\002\000\004\041\347\001\002\000\004" +
    "\023\uffaf\001\002\000\004\071\351\001\002\000\004\023" +
    "\uffaa\001\002\000\004\023\uffa8\001\002\000\004\007\354" +
    "\001\002\000\004\023\uffad\001\002\000\006\017\356\033" +
    "\357\001\002\000\004\021\362\001\002\000\004\020\360" +
    "\001\002\000\004\034\361\001\002\000\004\023\uffb2\001" +
    "\002\000\004\022\363\001\002\000\022\012\320\013\317" +
    "\014\315\026\324\027\323\042\316\052\322\067\321\001" +
    "\002\000\004\023\365\001\002\000\004\033\366\001\002" +
    "\000\004\017\367\001\002\000\004\034\370\001\002\000" +
    "\004\023\uffb0\001\002\000\004\033\372\001\002\000\004" +
    "\010\373\001\002\000\004\034\374\001\002\000\006\002" +
    "\uffbe\023\uffbe\001\002\000\004\023\uffe1\001\002\000\004" +
    "\023\u0109\001\002\000\004\023\u0101\001\002\000\004\023" +
    "\u0105\001\002\000\006\033\u0102\035\205\001\002\000\004" +
    "\010\u0103\001\002\000\004\034\u0104\001\002\000\006\002" +
    "\uffe2\023\uffe2\001\002\000\004\033\u0106\001\002\000\004" +
    "\010\u0107\001\002\000\004\034\u0108\001\002\000\006\002" +
    "\uffe3\023\uffe3\001\002\000\004\040\u010a\001\002\000\004" +
    "\034\u010b\001\002\000\004\023\u010d\001\002\000\004\023" +
    "\u012f\001\002\000\004\037\u010f\001\002\000\004\023\uffdf" +
    "\001\002\000\004\021\u0110\001\002\000\004\022\u0111\001" +
    "\002\000\022\006\u0115\045\u0112\046\u0113\047\u0117\053\u0116" +
    "\064\u0119\066\u0114\067\u0118\001\002\000\004\034\u012d\001" +
    "\002\000\004\034\u012b\001\002\000\004\034\u0129\001\002" +
    "\000\004\034\u0127\001\002\000\004\034\u0125\001\002\000" +
    "\004\034\u0123\001\002\000\004\034\u0121\001\002\000\004" +
    "\034\u011f\001\002\000\004\023\u011b\001\002\000\004\033" +
    "\u011c\001\002\000\004\037\u011d\001\002\000\004\034\u011e" +
    "\001\002\000\004\023\uffdd\001\002\000\004\041\u0120\001" +
    "\002\000\004\023\uffd5\001\002\000\004\004\u0122\001\002" +
    "\000\004\023\uffd6\001\002\000\004\024\u0124\001\002\000" +
    "\004\023\uffd2\001\002\000\004\004\u0126\001\002\000\004" +
    "\023\uffd1\001\002\000\004\004\u0128\001\002\000\004\023" +
    "\uffd8\001\002\000\004\004\u012a\001\002\000\004\023\uffd7" +
    "\001\002\000\004\024\u012c\001\002\000\004\023\uffd3\001" +
    "\002\000\004\004\u012e\001\002\000\004\023\uffd4\001\002" +
    "\000\006\033\u0131\037\u010f\001\002\000\004\023\uffde\001" +
    "\002\000\004\040\u0132\001\002\000\004\034\u0133\001\002" +
    "\000\004\023\uffe0\001\002\000\004\023\235\001\002\000" +
    "\004\023\u0136\001\002\000\004\033\u0137\001\002\000\004" +
    "\010\u0138\001\002\000\004\034\u0139\001\002\000\006\002" +
    "\uffa3\023\uffa3\001\002\000\004\034\u013b\001\002\000\004" +
    "\023\u013c\001\002\000\004\040\u0142\001\002\000\004\023" +
    "\u013e\001\002\000\004\033\u013f\001\002\000\004\010\u0140" +
    "\001\002\000\004\034\u0141\001\002\000\006\002\ufff2\023" +
    "\ufff2\001\002\000\004\034\u0143\001\002\000\004\023\u0145" +
    "\001\002\000\004\023\u015d\001\002\000\004\037\u0146\001" +
    "\002\000\004\021\u0147\001\002\000\004\022\u0148\001\002" +
    "\000\014\006\u014a\045\u014d\046\u0149\047\u014e\053\u014b\001" +
    "\002\000\004\034\u015b\001\002\000\004\034\u0159\001\002" +
    "\000\004\034\u0157\001\002\000\004\023\u0153\001\002\000" +
    "\004\034\u0151\001\002\000\004\034\u014f\001\002\000\004" +
    "\024\u0150\001\002\000\004\023\uffeb\001\002\000\004\004" +
    "\u0152\001\002\000\004\023\uffed\001\002\000\004\033\u0154" +
    "\001\002\000\004\037\u0155\001\002\000\004\034\u0156\001" +
    "\002\000\004\023\ufff0\001\002\000\004\004\u0158\001\002" +
    "\000\004\023\uffea\001\002\000\004\004\u015a\001\002\000" +
    "\004\023\uffee\001\002\000\004\024\u015c\001\002\000\004" +
    "\023\uffec\001\002\000\006\033\u015e\037\u015f\001\002\000" +
    "\004\040\u0167\001\002\000\004\021\u0160\001\002\000\004" +
    "\022\u0161\001\002\000\014\006\u014a\045\u014d\046\u0149\047" +
    "\u014e\053\u014b\001\002\000\004\023\u0163\001\002\000\004" +
    "\033\u0164\001\002\000\004\037\u0165\001\002\000\004\034" +
    "\u0166\001\002\000\004\023\uffef\001\002\000\004\034\u0168" +
    "\001\002\000\004\023\ufff1\001\002\000\004\023\u016b\001" +
    "\002\000\004\023\u017e\001\002\000\004\040\u016c\001\002" +
    "\000\004\034\u016d\001\002\000\004\023\u016e\001\002\000" +
    "\004\037\u0174\001\002\000\004\023\u0170\001\002\000\004" +
    "\033\u0171\001\002\000\004\040\u0172\001\002\000\004\034" +
    "\u0173\001\002\000\004\023\uffe5\001\002\000\004\021\u0175" +
    "\001\002\000\004\022\u0176\001\002\000\004\006\u0177\001" +
    "\002\000\004\034\u0178\001\002\000\004\004\u0179\001\002" +
    "\000\004\023\u017a\001\002\000\004\033\u017b\001\002\000" +
    "\004\037\u017c\001\002\000\004\034\u017d\001\002\000\004" +
    "\023\uffe4\001\002\000\004\033\u017f\001\002\000\004\010" +
    "\u0180\001\002\000\004\034\u0181\001\002\000\006\002\uffe6" +
    "\023\uffe6\001\002" });

  /** Access to parse-action table. */
  public short[][] action_table() {return _action_table;}

  /** <code>reduce_goto</code> table. */
  protected static final short[][] _reduce_table = 
    unpackFromStrings(new String[] {
    "\000\u017f\000\030\002\015\003\007\004\011\005\014\006" +
    "\004\007\016\010\012\011\013\026\006\027\003\046\005" +
    "\001\001\000\002\001\001\000\002\001\001\000\002\001" +
    "\001\000\002\001\001\000\002\001\001\000\002\001\001" +
    "\000\002\001\001\000\002\001\001\000\002\001\001\000" +
    "\002\001\001\000\002\001\001\000\002\001\001\000\002" +
    "\001\001\000\002\001\001\000\002\001\001\000\026\003" +
    "\007\004\011\005\014\006\004\007\016\010\012\011\024" +
    "\026\006\030\025\046\005\001\001\000\002\001\001\000" +
    "\002\001\001\000\024\003\007\004\011\005\014\006\004" +
    "\007\016\010\012\011\027\026\006\046\005\001\001\000" +
    "\002\001\001\000\002\001\001\000\002\001\001\000\002" +
    "\001\001\000\002\001\001\000\002\001\001\000\002\001" +
    "\001\000\002\001\001\000\004\053\u0139\001\001\000\002" +
    "\001\001\000\002\001\001\000\002\001\001\000\002\001" +
    "\001\000\002\001\001\000\002\001\001\000\004\033\046" +
    "\001\001\000\002\001\001\000\002\001\001\000\002\001" +
    "\001\000\004\034\052\001\001\000\002\001\001\000\002" +
    "\001\001\000\002\001\001\000\002\001\001\000\002\001" +
    "\001\000\002\001\001\000\002\001\001\000\002\001\001" +
    "\000\002\001\001\000\002\001\001\000\002\001\001\000" +
    "\002\001\001\000\002\001\001\000\002\001\001\000\002" +
    "\001\001\000\002\001\001\000\002\001\001\000\002\001" +
    "\001\000\002\001\001\000\002\001\001\000\004\037\100" +
    "\001\001\000\002\001\001\000\002\001\001\000\002\001" +
    "\001\000\002\001\001\000\002\001\001\000\002\001\001" +
    "\000\002\001\001\000\004\041\110\001\001\000\002\001" +
    "\001\000\002\001\001\000\002\001\001\000\002\001\001" +
    "\000\002\001\001\000\002\001\001\000\002\001\001\000" +
    "\002\001\001\000\002\001\001\000\002\001\001\000\002" +
    "\001\001\000\002\001\001\000\002\001\001\000\002\001" +
    "\001\000\002\001\001\000\002\001\001\000\002\001\001" +
    "\000\002\001\001\000\002\001\001\000\002\001\001\000" +
    "\002\001\001\000\002\001\001\000\002\001\001\000\002" +
    "\001\001\000\002\001\001\000\002\001\001\000\002\001" +
    "\001\000\004\040\143\001\001\000\004\014\201\001\001" +
    "\000\002\001\001\000\002\001\001\000\002\001\001\000" +
    "\002\001\001\000\002\001\001\000\002\001\001\000\002" +
    "\001\001\000\002\001\001\000\002\001\001\000\002\001" +
    "\001\000\002\001\001\000\002\001\001\000\002\001\001" +
    "\000\002\001\001\000\002\001\001\000\002\001\001\000" +
    "\002\001\001\000\002\001\001\000\002\001\001\000\002" +
    "\001\001\000\002\001\001\000\002\001\001\000\002\001" +
    "\001\000\002\001\001\000\002\001\001\000\002\001\001" +
    "\000\002\001\001\000\002\001\001\000\002\001\001\000" +
    "\002\001\001\000\002\001\001\000\002\001\001\000\002" +
    "\001\001\000\006\017\206\020\210\001\001\000\004\020" +
    "\220\001\001\000\002\001\001\000\002\001\001\000\002" +
    "\001\001\000\002\001\001\000\002\001\001\000\002\001" +
    "\001\000\002\001\001\000\002\001\001\000\002\001\001" +
    "\000\002\001\001\000\002\001\001\000\002\001\001\000" +
    "\002\001\001\000\002\001\001\000\002\001\001\000\002" +
    "\001\001\000\002\001\001\000\002\001\001\000\002\001" +
    "\001\000\004\025\233\001\001\000\002\001\001\000\002" +
    "\001\001\000\002\001\001\000\004\021\237\001\001\000" +
    "\002\001\001\000\002\001\001\000\002\001\001\000\002" +
    "\001\001\000\004\022\247\001\001\000\002\001\001\000" +
    "\002\001\001\000\002\001\001\000\002\001\001\000\002" +
    "\001\001\000\002\001\001\000\002\001\001\000\002\001" +
    "\001\000\002\001\001\000\002\001\001\000\004\023\260" +
    "\001\001\000\002\001\001\000\002\001\001\000\002\001" +
    "\001\000\002\001\001\000\002\001\001\000\002\001\001" +
    "\000\002\001\001\000\002\001\001\000\002\001\001\000" +
    "\002\001\001\000\002\001\001\000\002\001\001\000\004" +
    "\022\274\001\001\000\002\001\001\000\002\001\001\000" +
    "\002\001\001\000\002\001\001\000\002\001\001\000\002" +
    "\001\001\000\004\047\303\001\001\000\002\001\001\000" +
    "\002\001\001\000\002\001\001\000\004\050\307\001\001" +
    "\000\002\001\001\000\002\001\001\000\002\001\001\000" +
    "\002\001\001\000\004\051\324\001\001\000\002\001\001" +
    "\000\002\001\001\000\002\001\001\000\002\001\001\000" +
    "\002\001\001\000\002\001\001\000\002\001\001\000\002" +
    "\001\001\000\002\001\001\000\002\001\001\000\002\001" +
    "\001\000\002\001\001\000\002\001\001\000\002\001\001" +
    "\000\002\001\001\000\002\001\001\000\002\001\001\000" +
    "\004\052\341\001\001\000\002\001\001\000\002\001\001" +
    "\000\002\001\001\000\002\001\001\000\002\001\001\000" +
    "\002\001\001\000\002\001\001\000\002\001\001\000\002" +
    "\001\001\000\002\001\001\000\002\001\001\000\002\001" +
    "\001\000\002\001\001\000\002\001\001\000\002\001\001" +
    "\000\002\001\001\000\002\001\001\000\002\001\001\000" +
    "\002\001\001\000\002\001\001\000\004\051\363\001\001" +
    "\000\002\001\001\000\002\001\001\000\002\001\001\000" +
    "\002\001\001\000\002\001\001\000\002\001\001\000\002" +
    "\001\001\000\002\001\001\000\002\001\001\000\006\013" +
    "\376\054\375\001\001\000\002\001\001\000\004\014\377" +
    "\001\001\000\002\001\001\000\002\001\001\000\002\001" +
    "\001\000\002\001\001\000\002\001\001\000\002\001\001" +
    "\000\002\001\001\000\002\001\001\000\002\001\001\000" +
    "\002\001\001\000\002\001\001\000\006\015\u010b\016\u010d" +
    "\001\001\000\004\016\u012f\001\001\000\002\001\001\000" +
    "\002\001\001\000\002\001\001\000\002\001\001\000\004" +
    "\012\u0119\001\001\000\002\001\001\000\002\001\001\000" +
    "\002\001\001\000\002\001\001\000\002\001\001\000\002" +
    "\001\001\000\002\001\001\000\002\001\001\000\002\001" +
    "\001\000\002\001\001\000\002\001\001\000\002\001\001" +
    "\000\002\001\001\000\002\001\001\000\002\001\001\000" +
    "\002\001\001\000\002\001\001\000\002\001\001\000\002" +
    "\001\001\000\002\001\001\000\002\001\001\000\002\001" +
    "\001\000\002\001\001\000\002\001\001\000\002\001\001" +
    "\000\002\001\001\000\002\001\001\000\002\001\001\000" +
    "\002\001\001\000\002\001\001\000\002\001\001\000\002" +
    "\001\001\000\002\001\001\000\002\001\001\000\004\025" +
    "\u0134\001\001\000\002\001\001\000\002\001\001\000\002" +
    "\001\001\000\002\001\001\000\002\001\001\000\002\001" +
    "\001\000\004\024\u013c\001\001\000\002\001\001\000\002" +
    "\001\001\000\002\001\001\000\002\001\001\000\002\001" +
    "\001\000\002\001\001\000\002\001\001\000\004\032\u0143" +
    "\001\001\000\002\001\001\000\002\001\001\000\002\001" +
    "\001\000\002\001\001\000\004\031\u014b\001\001\000\002" +
    "\001\001\000\002\001\001\000\002\001\001\000\002\001" +
    "\001\000\002\001\001\000\002\001\001\000\002\001\001" +
    "\000\002\001\001\000\002\001\001\000\002\001\001\000" +
    "\002\001\001\000\002\001\001\000\002\001\001\000\002" +
    "\001\001\000\002\001\001\000\002\001\001\000\002\001" +
    "\001\000\002\001\001\000\002\001\001\000\002\001\001" +
    "\000\002\001\001\000\002\001\001\000\002\001\001\000" +
    "\002\001\001\000\004\031\u0161\001\001\000\002\001\001" +
    "\000\002\001\001\000\002\001\001\000\002\001\001\000" +
    "\002\001\001\000\002\001\001\000\002\001\001\000\004" +
    "\035\u0169\001\001\000\002\001\001\000\002\001\001\000" +
    "\002\001\001\000\004\036\u016e\001\001\000\002\001\001" +
    "\000\002\001\001\000\002\001\001\000\002\001\001\000" +
    "\002\001\001\000\002\001\001\000\002\001\001\000\002" +
    "\001\001\000\002\001\001\000\002\001\001\000\002\001" +
    "\001\000\002\001\001\000\002\001\001\000\002\001\001" +
    "\000\002\001\001\000\002\001\001\000\002\001\001\000" +
    "\002\001\001\000\002\001\001\000\002\001\001" });

  /** Access to <code>reduce_goto</code> table. */
  public short[][] reduce_table() {return _reduce_table;}

  /** Instance of action encapsulation class. */
  protected CUP$Analisis_Sintactico$actions action_obj;

  /** Action encapsulation object initializer. */
  protected void init_actions()
    {
      action_obj = new CUP$Analisis_Sintactico$actions(this);
    }

  /** Invoke a user supplied parse action. */
  public java_cup.runtime.Symbol do_action(
    int                        act_num,
    java_cup.runtime.lr_parser parser,
    java.util.Stack            stack,
    int                        top)
    throws java.lang.Exception
  {
    /* call code in generated class */
    return action_obj.CUP$Analisis_Sintactico$do_action(act_num, parser, stack, top);
  }

  /** Indicates start state. */
  public int start_state() {return 0;}
  /** Indicates start production. */
  public int start_production() {return 0;}

  /** <code>EOF</code> Symbol index. */
  public int EOF_sym() {return 0;}

  /** <code>error</code> Symbol index. */
  public int error_sym() {return 1;}



    public ManejadorCliente manejador;
    
    public Analisis_Sintactico(Analizador_Lexico_XML lex, ManejadorCliente manejador) { 
            super(lex);
            this.manejador=manejador;
    }

    public String resultado="";

    //Metodo al que se llama automaticamente ante algun error sintactico
    public void syntax_error(Symbol s)
    {        
        String lexema = s.value.toString();
        int fila = s.right;
        int columna = s.left;
        
        System.out.println("¡ Error Sintactico Recuperado !");
        System.out.println("\t\tLexema: "+lexema);
        System.out.println("\t\tFila: "+fila);
        System.out.println("\t\tColumna: "+columna);      
    }

    //Metodo al que se llama en el momento en que ya no es posible una recuperacion de errores
    public void unrecovered_syntax_error(Symbol s) throws java.lang.Exception
    {        
        String lexema = s.value.toString();
        int fila = s.right +1;
        int columna = s.left +1;
        
        System.out.println("¡ Error Sintactico, Modo Panico ! ");
        System.out.println("\t\tLexema: "+lexema);
        System.out.println("\t\tFila: "+fila);
        System.out.println("\t\tColumna: "+columna);

        ErrorJ errorEcontrado = new ErrorJ(lexema, "Error sintactico", fila, columna);
        manejador.capturarErrores(errorEcontrado);
    }

}

/** Cup generated class to encapsulate user supplied action code.*/
class CUP$Analisis_Sintactico$actions {



  private final Analisis_Sintactico parser;

  /** Constructor */
  CUP$Analisis_Sintactico$actions(Analisis_Sintactico parser) {
    this.parser = parser;
  }

  /** Method with the actual generated action code. */
  public final java_cup.runtime.Symbol CUP$Analisis_Sintactico$do_action(
    int                        CUP$Analisis_Sintactico$act_num,
    java_cup.runtime.lr_parser CUP$Analisis_Sintactico$parser,
    java.util.Stack            CUP$Analisis_Sintactico$stack,
    int                        CUP$Analisis_Sintactico$top)
    throws java.lang.Exception
    {
      /* Symbol object for return from actions */
      java_cup.runtime.Symbol CUP$Analisis_Sintactico$result;

      /* select the action based on the action number */
      switch (CUP$Analisis_Sintactico$act_num)
        {
          /*. . . . . . . . . . . . . . . . . . . .*/
          case 97: // XRS ::= MenorQue Parametros MayorQue MenorQue Parametro Nombre Igual Id MayorQue Identificador MenorQue Diagonal Parametro MayorQue MenorQue Parametro Nombre Igual Titulo MayorQue ValorParametro MenorQue Diagonal Parametro MayorQue MenorQue Diagonal Parametros MayorQue 
            {
              String RESULT =null;

              CUP$Analisis_Sintactico$result = parser.getSymbolFactory().newSymbol("XRS",30, ((java_cup.runtime.Symbol)CUP$Analisis_Sintactico$stack.elementAt(CUP$Analisis_Sintactico$top-28)), ((java_cup.runtime.Symbol)CUP$Analisis_Sintactico$stack.peek()), RESULT);
            }
          return CUP$Analisis_Sintactico$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 96: // estructuraModificarPagina ::= MenorQue Accion Nombre Igual ModificarPagina MayorQue XRS MenorQue Diagonal Accion MayorQue 
            {
              String RESULT =null;

              CUP$Analisis_Sintactico$result = parser.getSymbolFactory().newSymbol("estructuraModificarPagina",20, ((java_cup.runtime.Symbol)CUP$Analisis_Sintactico$stack.elementAt(CUP$Analisis_Sintactico$top-10)), ((java_cup.runtime.Symbol)CUP$Analisis_Sintactico$stack.peek()), RESULT);
            }
          return CUP$Analisis_Sintactico$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 95: // estructuraModificarPagina ::= MenorQue Accion Nombre Igual ModificarPagina MayorQue XRS XEs MenorQue Diagonal Accion MayorQue 
            {
              String RESULT =null;

              CUP$Analisis_Sintactico$result = parser.getSymbolFactory().newSymbol("estructuraModificarPagina",20, ((java_cup.runtime.Symbol)CUP$Analisis_Sintactico$stack.elementAt(CUP$Analisis_Sintactico$top-11)), ((java_cup.runtime.Symbol)CUP$Analisis_Sintactico$stack.peek()), RESULT);
            }
          return CUP$Analisis_Sintactico$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 94: // estructuraModificarComponente ::= MenorQue Accion Nombre Igual ModificarComponente MayorQue AGC1 MenorQue Diagonal Accion MayorQue 
            {
              String RESULT =null;

              CUP$Analisis_Sintactico$result = parser.getSymbolFactory().newSymbol("estructuraModificarComponente",36, ((java_cup.runtime.Symbol)CUP$Analisis_Sintactico$stack.elementAt(CUP$Analisis_Sintactico$top-10)), ((java_cup.runtime.Symbol)CUP$Analisis_Sintactico$stack.peek()), RESULT);
            }
          return CUP$Analisis_Sintactico$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 93: // GAEAS4 ::= Justificar 
            {
              String RESULT =null;

              CUP$Analisis_Sintactico$result = parser.getSymbolFactory().newSymbol("GAEAS4",40, ((java_cup.runtime.Symbol)CUP$Analisis_Sintactico$stack.peek()), ((java_cup.runtime.Symbol)CUP$Analisis_Sintactico$stack.peek()), RESULT);
            }
          return CUP$Analisis_Sintactico$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 92: // GAEAS4 ::= Derecha 
            {
              String RESULT =null;

              CUP$Analisis_Sintactico$result = parser.getSymbolFactory().newSymbol("GAEAS4",40, ((java_cup.runtime.Symbol)CUP$Analisis_Sintactico$stack.peek()), ((java_cup.runtime.Symbol)CUP$Analisis_Sintactico$stack.peek()), RESULT);
            }
          return CUP$Analisis_Sintactico$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 91: // GAEAS4 ::= Izquierda 
            {
              String RESULT =null;

              CUP$Analisis_Sintactico$result = parser.getSymbolFactory().newSymbol("GAEAS4",40, ((java_cup.runtime.Symbol)CUP$Analisis_Sintactico$stack.peek()), ((java_cup.runtime.Symbol)CUP$Analisis_Sintactico$stack.peek()), RESULT);
            }
          return CUP$Analisis_Sintactico$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 90: // GAEAS4 ::= Centrar 
            {
              String RESULT =null;

              CUP$Analisis_Sintactico$result = parser.getSymbolFactory().newSymbol("GAEAS4",40, ((java_cup.runtime.Symbol)CUP$Analisis_Sintactico$stack.peek()), ((java_cup.runtime.Symbol)CUP$Analisis_Sintactico$stack.peek()), RESULT);
            }
          return CUP$Analisis_Sintactico$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 89: // GAEAS3 ::= AtributoEtiquetas MayorQue 
            {
              String RESULT =null;

              CUP$Analisis_Sintactico$result = parser.getSymbolFactory().newSymbol("GAEAS3",39, ((java_cup.runtime.Symbol)CUP$Analisis_Sintactico$stack.elementAt(CUP$Analisis_Sintactico$top-1)), ((java_cup.runtime.Symbol)CUP$Analisis_Sintactico$stack.peek()), RESULT);
            }
          return CUP$Analisis_Sintactico$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 88: // GAEAS3 ::= Padre MayorQue Identificador 
            {
              String RESULT =null;

              CUP$Analisis_Sintactico$result = parser.getSymbolFactory().newSymbol("GAEAS3",39, ((java_cup.runtime.Symbol)CUP$Analisis_Sintactico$stack.elementAt(CUP$Analisis_Sintactico$top-2)), ((java_cup.runtime.Symbol)CUP$Analisis_Sintactico$stack.peek()), RESULT);
            }
          return CUP$Analisis_Sintactico$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 87: // GAEAS3 ::= Ancho MayorQue Entero 
            {
              String RESULT =null;

              CUP$Analisis_Sintactico$result = parser.getSymbolFactory().newSymbol("GAEAS3",39, ((java_cup.runtime.Symbol)CUP$Analisis_Sintactico$stack.elementAt(CUP$Analisis_Sintactico$top-2)), ((java_cup.runtime.Symbol)CUP$Analisis_Sintactico$stack.peek()), RESULT);
            }
          return CUP$Analisis_Sintactico$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 86: // GAEAS3 ::= Altura MayorQue Entero 
            {
              String RESULT =null;

              CUP$Analisis_Sintactico$result = parser.getSymbolFactory().newSymbol("GAEAS3",39, ((java_cup.runtime.Symbol)CUP$Analisis_Sintactico$stack.elementAt(CUP$Analisis_Sintactico$top-2)), ((java_cup.runtime.Symbol)CUP$Analisis_Sintactico$stack.peek()), RESULT);
            }
          return CUP$Analisis_Sintactico$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 85: // GAEAS3 ::= Origen MayorQue URL 
            {
              String RESULT =null;

              CUP$Analisis_Sintactico$result = parser.getSymbolFactory().newSymbol("GAEAS3",39, ((java_cup.runtime.Symbol)CUP$Analisis_Sintactico$stack.elementAt(CUP$Analisis_Sintactico$top-2)), ((java_cup.runtime.Symbol)CUP$Analisis_Sintactico$stack.peek()), RESULT);
            }
          return CUP$Analisis_Sintactico$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 84: // GAEAS3 ::= Color MayorQue TextColor 
            {
              String RESULT =null;

              CUP$Analisis_Sintactico$result = parser.getSymbolFactory().newSymbol("GAEAS3",39, ((java_cup.runtime.Symbol)CUP$Analisis_Sintactico$stack.elementAt(CUP$Analisis_Sintactico$top-2)), ((java_cup.runtime.Symbol)CUP$Analisis_Sintactico$stack.peek()), RESULT);
            }
          return CUP$Analisis_Sintactico$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 83: // GAEAS3 ::= Alineacion MayorQue GAEAS4 
            {
              String RESULT =null;

              CUP$Analisis_Sintactico$result = parser.getSymbolFactory().newSymbol("GAEAS3",39, ((java_cup.runtime.Symbol)CUP$Analisis_Sintactico$stack.elementAt(CUP$Analisis_Sintactico$top-2)), ((java_cup.runtime.Symbol)CUP$Analisis_Sintactico$stack.peek()), RESULT);
            }
          return CUP$Analisis_Sintactico$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 82: // GAEAS3 ::= Texto MayorQue ValorParametro 
            {
              String RESULT =null;

              CUP$Analisis_Sintactico$result = parser.getSymbolFactory().newSymbol("GAEAS3",39, ((java_cup.runtime.Symbol)CUP$Analisis_Sintactico$stack.elementAt(CUP$Analisis_Sintactico$top-2)), ((java_cup.runtime.Symbol)CUP$Analisis_Sintactico$stack.peek()), RESULT);
            }
          return CUP$Analisis_Sintactico$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 81: // GAEAS2 ::= GAEAS2 MenorQue Atributo Nombre Igual GAEAS3 MenorQue Diagonal Atributo MayorQue 
            {
              String RESULT =null;

              CUP$Analisis_Sintactico$result = parser.getSymbolFactory().newSymbol("GAEAS2",38, ((java_cup.runtime.Symbol)CUP$Analisis_Sintactico$stack.elementAt(CUP$Analisis_Sintactico$top-9)), ((java_cup.runtime.Symbol)CUP$Analisis_Sintactico$stack.peek()), RESULT);
            }
          return CUP$Analisis_Sintactico$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 80: // GAEAS2 ::= MenorQue Atributo Nombre Igual GAEAS3 MenorQue Diagonal Atributo MayorQue 
            {
              String RESULT =null;

              CUP$Analisis_Sintactico$result = parser.getSymbolFactory().newSymbol("GAEAS2",38, ((java_cup.runtime.Symbol)CUP$Analisis_Sintactico$stack.elementAt(CUP$Analisis_Sintactico$top-8)), ((java_cup.runtime.Symbol)CUP$Analisis_Sintactico$stack.peek()), RESULT);
            }
          return CUP$Analisis_Sintactico$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 79: // GAEAS ::= MenorQue Atributos MayorQue GAEAS2 MenorQue Diagonal Atributos MayorQue 
            {
              String RESULT =null;

              CUP$Analisis_Sintactico$result = parser.getSymbolFactory().newSymbol("GAEAS",37, ((java_cup.runtime.Symbol)CUP$Analisis_Sintactico$stack.elementAt(CUP$Analisis_Sintactico$top-7)), ((java_cup.runtime.Symbol)CUP$Analisis_Sintactico$stack.peek()), RESULT);
            }
          return CUP$Analisis_Sintactico$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 78: // M61 ::= MenuComponente 
            {
              String RESULT =null;

              CUP$Analisis_Sintactico$result = parser.getSymbolFactory().newSymbol("M61",17, ((java_cup.runtime.Symbol)CUP$Analisis_Sintactico$stack.peek()), ((java_cup.runtime.Symbol)CUP$Analisis_Sintactico$stack.peek()), RESULT);
            }
          return CUP$Analisis_Sintactico$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 77: // M61 ::= VideoComponente 
            {
              String RESULT =null;

              CUP$Analisis_Sintactico$result = parser.getSymbolFactory().newSymbol("M61",17, ((java_cup.runtime.Symbol)CUP$Analisis_Sintactico$stack.peek()), ((java_cup.runtime.Symbol)CUP$Analisis_Sintactico$stack.peek()), RESULT);
            }
          return CUP$Analisis_Sintactico$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 76: // M61 ::= ParrafoComponente 
            {
              String RESULT =null;

              CUP$Analisis_Sintactico$result = parser.getSymbolFactory().newSymbol("M61",17, ((java_cup.runtime.Symbol)CUP$Analisis_Sintactico$stack.peek()), ((java_cup.runtime.Symbol)CUP$Analisis_Sintactico$stack.peek()), RESULT);
            }
          return CUP$Analisis_Sintactico$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 75: // M61 ::= ImagenComponente 
            {
              String RESULT =null;

              CUP$Analisis_Sintactico$result = parser.getSymbolFactory().newSymbol("M61",17, ((java_cup.runtime.Symbol)CUP$Analisis_Sintactico$stack.peek()), ((java_cup.runtime.Symbol)CUP$Analisis_Sintactico$stack.peek()), RESULT);
            }
          return CUP$Analisis_Sintactico$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 74: // M61 ::= TituloComponente 
            {
              String RESULT =null;

              CUP$Analisis_Sintactico$result = parser.getSymbolFactory().newSymbol("M61",17, ((java_cup.runtime.Symbol)CUP$Analisis_Sintactico$stack.peek()), ((java_cup.runtime.Symbol)CUP$Analisis_Sintactico$stack.peek()), RESULT);
            }
          return CUP$Analisis_Sintactico$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 73: // M41 ::= Clase MayorQue M61 
            {
              String RESULT =null;

              CUP$Analisis_Sintactico$result = parser.getSymbolFactory().newSymbol("M41",16, ((java_cup.runtime.Symbol)CUP$Analisis_Sintactico$stack.elementAt(CUP$Analisis_Sintactico$top-2)), ((java_cup.runtime.Symbol)CUP$Analisis_Sintactico$stack.peek()), RESULT);
            }
          return CUP$Analisis_Sintactico$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 72: // M41 ::= Pagina MayorQue Identificador 
            {
              String RESULT =null;

              CUP$Analisis_Sintactico$result = parser.getSymbolFactory().newSymbol("M41",16, ((java_cup.runtime.Symbol)CUP$Analisis_Sintactico$stack.elementAt(CUP$Analisis_Sintactico$top-2)), ((java_cup.runtime.Symbol)CUP$Analisis_Sintactico$stack.peek()), RESULT);
            }
          return CUP$Analisis_Sintactico$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 71: // M41 ::= Id MayorQue Identificador 
            {
              String RESULT =null;

              CUP$Analisis_Sintactico$result = parser.getSymbolFactory().newSymbol("M41",16, ((java_cup.runtime.Symbol)CUP$Analisis_Sintactico$stack.elementAt(CUP$Analisis_Sintactico$top-2)), ((java_cup.runtime.Symbol)CUP$Analisis_Sintactico$stack.peek()), RESULT);
            }
          return CUP$Analisis_Sintactico$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 70: // M51 ::= M51 MenorQue Parametro Nombre Igual M41 MenorQue Diagonal Parametro MayorQue 
            {
              String RESULT =null;

              CUP$Analisis_Sintactico$result = parser.getSymbolFactory().newSymbol("M51",15, ((java_cup.runtime.Symbol)CUP$Analisis_Sintactico$stack.elementAt(CUP$Analisis_Sintactico$top-9)), ((java_cup.runtime.Symbol)CUP$Analisis_Sintactico$stack.peek()), RESULT);
            }
          return CUP$Analisis_Sintactico$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 69: // M51 ::= MenorQue Parametro Nombre Igual M41 MenorQue Diagonal Parametro MayorQue 
            {
              String RESULT =null;

              CUP$Analisis_Sintactico$result = parser.getSymbolFactory().newSymbol("M51",15, ((java_cup.runtime.Symbol)CUP$Analisis_Sintactico$stack.elementAt(CUP$Analisis_Sintactico$top-8)), ((java_cup.runtime.Symbol)CUP$Analisis_Sintactico$stack.peek()), RESULT);
            }
          return CUP$Analisis_Sintactico$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 68: // AGC1 ::= MenorQue Parametros MayorQue M51 MenorQue Diagonal Parametros MayorQue GAEAS 
            {
              String RESULT =null;

              CUP$Analisis_Sintactico$result = parser.getSymbolFactory().newSymbol("AGC1",19, ((java_cup.runtime.Symbol)CUP$Analisis_Sintactico$stack.elementAt(CUP$Analisis_Sintactico$top-8)), ((java_cup.runtime.Symbol)CUP$Analisis_Sintactico$stack.peek()), RESULT);
            }
          return CUP$Analisis_Sintactico$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 67: // estructuraAgregarComponente ::= MenorQue Accion Nombre Igual AgregarComponente MayorQue AGC1 MenorQue Diagonal Accion MayorQue 
            {
              String RESULT =null;

              CUP$Analisis_Sintactico$result = parser.getSymbolFactory().newSymbol("estructuraAgregarComponente",6, ((java_cup.runtime.Symbol)CUP$Analisis_Sintactico$stack.elementAt(CUP$Analisis_Sintactico$top-10)), ((java_cup.runtime.Symbol)CUP$Analisis_Sintactico$stack.peek()), RESULT);
            }
          return CUP$Analisis_Sintactico$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 66: // BC2 ::= MenorQue Parametro Nombre Igual Id MayorQue Identificador MenorQue Diagonal Parametro MayorQue MenorQue Parametro Nombre Igual Pagina MayorQue Identificador MenorQue Diagonal Parametro MayorQue 
            {
              String RESULT =null;

              CUP$Analisis_Sintactico$result = parser.getSymbolFactory().newSymbol("BC2",31, ((java_cup.runtime.Symbol)CUP$Analisis_Sintactico$stack.elementAt(CUP$Analisis_Sintactico$top-21)), ((java_cup.runtime.Symbol)CUP$Analisis_Sintactico$stack.peek()), RESULT);
            }
          return CUP$Analisis_Sintactico$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 65: // BC1 ::= MenorQue Parametros MayorQue BC2 MenorQue Diagonal Parametros MayorQue 
            {
              String RESULT =null;

              CUP$Analisis_Sintactico$result = parser.getSymbolFactory().newSymbol("BC1",29, ((java_cup.runtime.Symbol)CUP$Analisis_Sintactico$stack.elementAt(CUP$Analisis_Sintactico$top-7)), ((java_cup.runtime.Symbol)CUP$Analisis_Sintactico$stack.peek()), RESULT);
            }
          return CUP$Analisis_Sintactico$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 64: // estructuraBorrarComponente ::= MenorQue Accion Nombre Igual BorrarComponente MayorQue BC1 MenorQue Diagonal Accion MayorQue 
            {
              String RESULT =null;

              CUP$Analisis_Sintactico$result = parser.getSymbolFactory().newSymbol("estructuraBorrarComponente",5, ((java_cup.runtime.Symbol)CUP$Analisis_Sintactico$stack.elementAt(CUP$Analisis_Sintactico$top-10)), ((java_cup.runtime.Symbol)CUP$Analisis_Sintactico$stack.peek()), RESULT);
            }
          return CUP$Analisis_Sintactico$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 63: // AEAS4 ::= Justificar 
            {
              String RESULT =null;

              CUP$Analisis_Sintactico$result = parser.getSymbolFactory().newSymbol("AEAS4",35, ((java_cup.runtime.Symbol)CUP$Analisis_Sintactico$stack.peek()), ((java_cup.runtime.Symbol)CUP$Analisis_Sintactico$stack.peek()), RESULT);
            }
          return CUP$Analisis_Sintactico$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 62: // AEAS4 ::= Derecha 
            {
              String RESULT =null;

              CUP$Analisis_Sintactico$result = parser.getSymbolFactory().newSymbol("AEAS4",35, ((java_cup.runtime.Symbol)CUP$Analisis_Sintactico$stack.peek()), ((java_cup.runtime.Symbol)CUP$Analisis_Sintactico$stack.peek()), RESULT);
            }
          return CUP$Analisis_Sintactico$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 61: // AEAS4 ::= Izquierda 
            {
              String RESULT =null;

              CUP$Analisis_Sintactico$result = parser.getSymbolFactory().newSymbol("AEAS4",35, ((java_cup.runtime.Symbol)CUP$Analisis_Sintactico$stack.peek()), ((java_cup.runtime.Symbol)CUP$Analisis_Sintactico$stack.peek()), RESULT);
            }
          return CUP$Analisis_Sintactico$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 60: // AEAS4 ::= Centrar 
            {
              String RESULT =null;

              CUP$Analisis_Sintactico$result = parser.getSymbolFactory().newSymbol("AEAS4",35, ((java_cup.runtime.Symbol)CUP$Analisis_Sintactico$stack.peek()), ((java_cup.runtime.Symbol)CUP$Analisis_Sintactico$stack.peek()), RESULT);
            }
          return CUP$Analisis_Sintactico$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 59: // AEAS3 ::= AtributoEtiquetas MayorQue 
            {
              String RESULT =null;

              CUP$Analisis_Sintactico$result = parser.getSymbolFactory().newSymbol("AEAS3",34, ((java_cup.runtime.Symbol)CUP$Analisis_Sintactico$stack.elementAt(CUP$Analisis_Sintactico$top-1)), ((java_cup.runtime.Symbol)CUP$Analisis_Sintactico$stack.peek()), RESULT);
            }
          return CUP$Analisis_Sintactico$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 58: // AEAS3 ::= Padre MayorQue Identificador 
            {
              String RESULT =null;

              CUP$Analisis_Sintactico$result = parser.getSymbolFactory().newSymbol("AEAS3",34, ((java_cup.runtime.Symbol)CUP$Analisis_Sintactico$stack.elementAt(CUP$Analisis_Sintactico$top-2)), ((java_cup.runtime.Symbol)CUP$Analisis_Sintactico$stack.peek()), RESULT);
            }
          return CUP$Analisis_Sintactico$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 57: // AEAS3 ::= Ancho MayorQue Entero 
            {
              String RESULT =null;

              CUP$Analisis_Sintactico$result = parser.getSymbolFactory().newSymbol("AEAS3",34, ((java_cup.runtime.Symbol)CUP$Analisis_Sintactico$stack.elementAt(CUP$Analisis_Sintactico$top-2)), ((java_cup.runtime.Symbol)CUP$Analisis_Sintactico$stack.peek()), RESULT);
            }
          return CUP$Analisis_Sintactico$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 56: // AEAS3 ::= Altura MayorQue Entero 
            {
              String RESULT =null;

              CUP$Analisis_Sintactico$result = parser.getSymbolFactory().newSymbol("AEAS3",34, ((java_cup.runtime.Symbol)CUP$Analisis_Sintactico$stack.elementAt(CUP$Analisis_Sintactico$top-2)), ((java_cup.runtime.Symbol)CUP$Analisis_Sintactico$stack.peek()), RESULT);
            }
          return CUP$Analisis_Sintactico$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 55: // AEAS3 ::= Origen MayorQue URL 
            {
              String RESULT =null;

              CUP$Analisis_Sintactico$result = parser.getSymbolFactory().newSymbol("AEAS3",34, ((java_cup.runtime.Symbol)CUP$Analisis_Sintactico$stack.elementAt(CUP$Analisis_Sintactico$top-2)), ((java_cup.runtime.Symbol)CUP$Analisis_Sintactico$stack.peek()), RESULT);
            }
          return CUP$Analisis_Sintactico$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 54: // AEAS3 ::= Color MayorQue TextColor 
            {
              String RESULT =null;

              CUP$Analisis_Sintactico$result = parser.getSymbolFactory().newSymbol("AEAS3",34, ((java_cup.runtime.Symbol)CUP$Analisis_Sintactico$stack.elementAt(CUP$Analisis_Sintactico$top-2)), ((java_cup.runtime.Symbol)CUP$Analisis_Sintactico$stack.peek()), RESULT);
            }
          return CUP$Analisis_Sintactico$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 53: // AEAS3 ::= Alineacion MayorQue AEAS4 
            {
              String RESULT =null;

              CUP$Analisis_Sintactico$result = parser.getSymbolFactory().newSymbol("AEAS3",34, ((java_cup.runtime.Symbol)CUP$Analisis_Sintactico$stack.elementAt(CUP$Analisis_Sintactico$top-2)), ((java_cup.runtime.Symbol)CUP$Analisis_Sintactico$stack.peek()), RESULT);
            }
          return CUP$Analisis_Sintactico$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 52: // AEAS3 ::= Texto MayorQue ValorParametro 
            {
              String RESULT =null;

              CUP$Analisis_Sintactico$result = parser.getSymbolFactory().newSymbol("AEAS3",34, ((java_cup.runtime.Symbol)CUP$Analisis_Sintactico$stack.elementAt(CUP$Analisis_Sintactico$top-2)), ((java_cup.runtime.Symbol)CUP$Analisis_Sintactico$stack.peek()), RESULT);
            }
          return CUP$Analisis_Sintactico$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 51: // AEAS2 ::= AEAS2 MenorQue Atributo Nombre Igual AEAS3 MenorQue Diagonal Atributo MayorQue 
            {
              String RESULT =null;

              CUP$Analisis_Sintactico$result = parser.getSymbolFactory().newSymbol("AEAS2",33, ((java_cup.runtime.Symbol)CUP$Analisis_Sintactico$stack.elementAt(CUP$Analisis_Sintactico$top-9)), ((java_cup.runtime.Symbol)CUP$Analisis_Sintactico$stack.peek()), RESULT);
            }
          return CUP$Analisis_Sintactico$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 50: // AEAS2 ::= MenorQue Atributo Nombre Igual AEAS3 MenorQue Diagonal Atributo MayorQue 
            {
              String RESULT =null;

              CUP$Analisis_Sintactico$result = parser.getSymbolFactory().newSymbol("AEAS2",33, ((java_cup.runtime.Symbol)CUP$Analisis_Sintactico$stack.elementAt(CUP$Analisis_Sintactico$top-8)), ((java_cup.runtime.Symbol)CUP$Analisis_Sintactico$stack.peek()), RESULT);
            }
          return CUP$Analisis_Sintactico$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 49: // AEAS ::= MenorQue Atributos MayorQue AEAS2 MenorQue Diagonal Atributos MayorQue 
            {
              String RESULT =null;

              CUP$Analisis_Sintactico$result = parser.getSymbolFactory().newSymbol("AEAS",32, ((java_cup.runtime.Symbol)CUP$Analisis_Sintactico$stack.elementAt(CUP$Analisis_Sintactico$top-7)), ((java_cup.runtime.Symbol)CUP$Analisis_Sintactico$stack.peek()), RESULT);
            }
          return CUP$Analisis_Sintactico$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 48: // XN1 ::= UsuarioModificacion MayorQue Identificador 
            {
              String RESULT =null;

              CUP$Analisis_Sintactico$result = parser.getSymbolFactory().newSymbol("XN1",8, ((java_cup.runtime.Symbol)CUP$Analisis_Sintactico$stack.elementAt(CUP$Analisis_Sintactico$top-2)), ((java_cup.runtime.Symbol)CUP$Analisis_Sintactico$stack.peek()), RESULT);
            }
          return CUP$Analisis_Sintactico$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 47: // XN1 ::= FechaModificacion MayorQue Fecha 
            {
              String RESULT =null;

              CUP$Analisis_Sintactico$result = parser.getSymbolFactory().newSymbol("XN1",8, ((java_cup.runtime.Symbol)CUP$Analisis_Sintactico$stack.elementAt(CUP$Analisis_Sintactico$top-2)), ((java_cup.runtime.Symbol)CUP$Analisis_Sintactico$stack.peek()), RESULT);
            }
          return CUP$Analisis_Sintactico$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 46: // XN1 ::= FechaCreacion MayorQue Fecha 
            {
              String RESULT =null;

              CUP$Analisis_Sintactico$result = parser.getSymbolFactory().newSymbol("XN1",8, ((java_cup.runtime.Symbol)CUP$Analisis_Sintactico$stack.elementAt(CUP$Analisis_Sintactico$top-2)), ((java_cup.runtime.Symbol)CUP$Analisis_Sintactico$stack.peek()), RESULT);
            }
          return CUP$Analisis_Sintactico$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 45: // XN1 ::= UsuarioCreacion MayorQue Identificador 
            {
              String RESULT =null;

              CUP$Analisis_Sintactico$result = parser.getSymbolFactory().newSymbol("XN1",8, ((java_cup.runtime.Symbol)CUP$Analisis_Sintactico$stack.elementAt(CUP$Analisis_Sintactico$top-2)), ((java_cup.runtime.Symbol)CUP$Analisis_Sintactico$stack.peek()), RESULT);
            }
          return CUP$Analisis_Sintactico$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 44: // XN1 ::= Titulo MayorQue ValorParametro 
            {
              String RESULT =null;

              CUP$Analisis_Sintactico$result = parser.getSymbolFactory().newSymbol("XN1",8, ((java_cup.runtime.Symbol)CUP$Analisis_Sintactico$stack.elementAt(CUP$Analisis_Sintactico$top-2)), ((java_cup.runtime.Symbol)CUP$Analisis_Sintactico$stack.peek()), RESULT);
            }
          return CUP$Analisis_Sintactico$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 43: // XN1 ::= Padre MayorQue Identificador 
            {
              String RESULT =null;
		 parser.manejador.enviarObligatorioNPW("PADRE"); 
              CUP$Analisis_Sintactico$result = parser.getSymbolFactory().newSymbol("XN1",8, ((java_cup.runtime.Symbol)CUP$Analisis_Sintactico$stack.elementAt(CUP$Analisis_Sintactico$top-2)), ((java_cup.runtime.Symbol)CUP$Analisis_Sintactico$stack.peek()), RESULT);
            }
          return CUP$Analisis_Sintactico$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 42: // XN1 ::= Sitio MayorQue Identificador 
            {
              String RESULT =null;
		 parser.manejador.enviarObligatorioNPW("SITIO"); 
              CUP$Analisis_Sintactico$result = parser.getSymbolFactory().newSymbol("XN1",8, ((java_cup.runtime.Symbol)CUP$Analisis_Sintactico$stack.elementAt(CUP$Analisis_Sintactico$top-2)), ((java_cup.runtime.Symbol)CUP$Analisis_Sintactico$stack.peek()), RESULT);
            }
          return CUP$Analisis_Sintactico$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 41: // XN1 ::= Id MayorQue Identificador 
            {
              String RESULT =null;
		 parser.manejador.enviarObligatorioNPW("ID"); 
              CUP$Analisis_Sintactico$result = parser.getSymbolFactory().newSymbol("XN1",8, ((java_cup.runtime.Symbol)CUP$Analisis_Sintactico$stack.elementAt(CUP$Analisis_Sintactico$top-2)), ((java_cup.runtime.Symbol)CUP$Analisis_Sintactico$stack.peek()), RESULT);
            }
          return CUP$Analisis_Sintactico$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 40: // XE2 ::= MenorQue Etiqueta Valor Igual DatoEntreComillas Diagonal MayorQue 
            {
              String RESULT =null;

              CUP$Analisis_Sintactico$result = parser.getSymbolFactory().newSymbol("XE2",14, ((java_cup.runtime.Symbol)CUP$Analisis_Sintactico$stack.elementAt(CUP$Analisis_Sintactico$top-6)), ((java_cup.runtime.Symbol)CUP$Analisis_Sintactico$stack.peek()), RESULT);
            }
          return CUP$Analisis_Sintactico$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 39: // XE1 ::= XE1 XE2 
            {
              String RESULT =null;

              CUP$Analisis_Sintactico$result = parser.getSymbolFactory().newSymbol("XE1",13, ((java_cup.runtime.Symbol)CUP$Analisis_Sintactico$stack.elementAt(CUP$Analisis_Sintactico$top-1)), ((java_cup.runtime.Symbol)CUP$Analisis_Sintactico$stack.peek()), RESULT);
            }
          return CUP$Analisis_Sintactico$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 38: // XE1 ::= XE2 
            {
              String RESULT =null;

              CUP$Analisis_Sintactico$result = parser.getSymbolFactory().newSymbol("XE1",13, ((java_cup.runtime.Symbol)CUP$Analisis_Sintactico$stack.peek()), ((java_cup.runtime.Symbol)CUP$Analisis_Sintactico$stack.peek()), RESULT);
            }
          return CUP$Analisis_Sintactico$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 37: // XEs ::= MenorQue Etiquetas MayorQue XE1 MenorQue Diagonal Etiquetas MayorQue 
            {
              String RESULT =null;

              CUP$Analisis_Sintactico$result = parser.getSymbolFactory().newSymbol("XEs",10, ((java_cup.runtime.Symbol)CUP$Analisis_Sintactico$stack.elementAt(CUP$Analisis_Sintactico$top-7)), ((java_cup.runtime.Symbol)CUP$Analisis_Sintactico$stack.peek()), RESULT);
            }
          return CUP$Analisis_Sintactico$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 36: // XP2 ::= MenorQue Parametro Nombre Igual XN1 MenorQue Diagonal Parametro MayorQue 
            {
              String RESULT =null;

              CUP$Analisis_Sintactico$result = parser.getSymbolFactory().newSymbol("XP2",12, ((java_cup.runtime.Symbol)CUP$Analisis_Sintactico$stack.elementAt(CUP$Analisis_Sintactico$top-8)), ((java_cup.runtime.Symbol)CUP$Analisis_Sintactico$stack.peek()), RESULT);
            }
          return CUP$Analisis_Sintactico$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 35: // XP1 ::= XP1 XP2 
            {
              String RESULT =null;

              CUP$Analisis_Sintactico$result = parser.getSymbolFactory().newSymbol("XP1",11, ((java_cup.runtime.Symbol)CUP$Analisis_Sintactico$stack.elementAt(CUP$Analisis_Sintactico$top-1)), ((java_cup.runtime.Symbol)CUP$Analisis_Sintactico$stack.peek()), RESULT);
            }
          return CUP$Analisis_Sintactico$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 34: // XP1 ::= XP2 
            {
              String RESULT =null;

              CUP$Analisis_Sintactico$result = parser.getSymbolFactory().newSymbol("XP1",11, ((java_cup.runtime.Symbol)CUP$Analisis_Sintactico$stack.peek()), ((java_cup.runtime.Symbol)CUP$Analisis_Sintactico$stack.peek()), RESULT);
            }
          return CUP$Analisis_Sintactico$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 33: // XS ::= NT$1 MenorQue Parametros MayorQue XP1 MenorQue Diagonal Parametros MayorQue 
            {
              String RESULT =null;
              // propagate RESULT from NT$1
                RESULT = (String) ((java_cup.runtime.Symbol) CUP$Analisis_Sintactico$stack.elementAt(CUP$Analisis_Sintactico$top-8)).value;

              CUP$Analisis_Sintactico$result = parser.getSymbolFactory().newSymbol("XS",9, ((java_cup.runtime.Symbol)CUP$Analisis_Sintactico$stack.elementAt(CUP$Analisis_Sintactico$top-8)), ((java_cup.runtime.Symbol)CUP$Analisis_Sintactico$stack.peek()), RESULT);
            }
          return CUP$Analisis_Sintactico$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 32: // NT$1 ::= 
            {
              String RESULT =null;
 parser.manejador.inicializarObligatoriosNPW(); 
              CUP$Analisis_Sintactico$result = parser.getSymbolFactory().newSymbol("NT$1",42, ((java_cup.runtime.Symbol)CUP$Analisis_Sintactico$stack.peek()), ((java_cup.runtime.Symbol)CUP$Analisis_Sintactico$stack.peek()), RESULT);
            }
          return CUP$Analisis_Sintactico$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 31: // estructuraNuevaPagina ::= MenorQue Accion Nombre Igual NuevaPagina MayorQue XS MenorQue Diagonal Accion MayorQue 
            {
              String RESULT =null;

              CUP$Analisis_Sintactico$result = parser.getSymbolFactory().newSymbol("estructuraNuevaPagina",1, ((java_cup.runtime.Symbol)CUP$Analisis_Sintactico$stack.elementAt(CUP$Analisis_Sintactico$top-10)), ((java_cup.runtime.Symbol)CUP$Analisis_Sintactico$stack.peek()), RESULT);
            }
          return CUP$Analisis_Sintactico$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 30: // estructuraNuevaPagina ::= MenorQue Accion Nombre Igual NuevaPagina MayorQue XS XEs MenorQue Diagonal Accion MayorQue 
            {
              String RESULT =null;

              CUP$Analisis_Sintactico$result = parser.getSymbolFactory().newSymbol("estructuraNuevaPagina",1, ((java_cup.runtime.Symbol)CUP$Analisis_Sintactico$stack.elementAt(CUP$Analisis_Sintactico$top-11)), ((java_cup.runtime.Symbol)CUP$Analisis_Sintactico$stack.peek()), RESULT);
            }
          return CUP$Analisis_Sintactico$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 29: // BP2 ::= MenorQue Parametro Nombre Igual Id MayorQue Identificador MenorQue Diagonal Parametro MayorQue 
            {
              String RESULT =null;

              CUP$Analisis_Sintactico$result = parser.getSymbolFactory().newSymbol("BP2",28, ((java_cup.runtime.Symbol)CUP$Analisis_Sintactico$stack.elementAt(CUP$Analisis_Sintactico$top-10)), ((java_cup.runtime.Symbol)CUP$Analisis_Sintactico$stack.peek()), RESULT);
            }
          return CUP$Analisis_Sintactico$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 28: // BP1 ::= MenorQue Parametros MayorQue BP2 MenorQue Diagonal Parametros MayorQue 
            {
              String RESULT =null;

              CUP$Analisis_Sintactico$result = parser.getSymbolFactory().newSymbol("BP1",27, ((java_cup.runtime.Symbol)CUP$Analisis_Sintactico$stack.elementAt(CUP$Analisis_Sintactico$top-7)), ((java_cup.runtime.Symbol)CUP$Analisis_Sintactico$stack.peek()), RESULT);
            }
          return CUP$Analisis_Sintactico$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 27: // estructuraBorrarPagina ::= MenorQue Accion Nombre Igual BorrarPagina MayorQue BP1 MenorQue Diagonal Accion MayorQue 
            {
              String RESULT =null;

              CUP$Analisis_Sintactico$result = parser.getSymbolFactory().newSymbol("estructuraBorrarPagina",4, ((java_cup.runtime.Symbol)CUP$Analisis_Sintactico$stack.elementAt(CUP$Analisis_Sintactico$top-10)), ((java_cup.runtime.Symbol)CUP$Analisis_Sintactico$stack.peek()), RESULT);
            }
          return CUP$Analisis_Sintactico$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 26: // BSW2 ::= MenorQue Parametro Nombre Igual Id MayorQue Identificador MenorQue Diagonal Parametro MayorQue 
            {
              String RESULT =null;

              CUP$Analisis_Sintactico$result = parser.getSymbolFactory().newSymbol("BSW2",26, ((java_cup.runtime.Symbol)CUP$Analisis_Sintactico$stack.elementAt(CUP$Analisis_Sintactico$top-10)), ((java_cup.runtime.Symbol)CUP$Analisis_Sintactico$stack.peek()), RESULT);
            }
          return CUP$Analisis_Sintactico$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 25: // BSW1 ::= MenorQue Parametros MayorQue BSW2 MenorQue Diagonal Parametros MayorQue 
            {
              String RESULT =null;

              CUP$Analisis_Sintactico$result = parser.getSymbolFactory().newSymbol("BSW1",25, ((java_cup.runtime.Symbol)CUP$Analisis_Sintactico$stack.elementAt(CUP$Analisis_Sintactico$top-7)), ((java_cup.runtime.Symbol)CUP$Analisis_Sintactico$stack.peek()), RESULT);
            }
          return CUP$Analisis_Sintactico$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 24: // estructuraBorrarSitioWeb ::= MenorQue Accion Nombre Igual BorrarSitioWeb MayorQue BSW1 MenorQue Diagonal Accion MayorQue 
            {
              String RESULT =null;

              CUP$Analisis_Sintactico$result = parser.getSymbolFactory().newSymbol("estructuraBorrarSitioWeb",3, ((java_cup.runtime.Symbol)CUP$Analisis_Sintactico$stack.elementAt(CUP$Analisis_Sintactico$top-10)), ((java_cup.runtime.Symbol)CUP$Analisis_Sintactico$stack.peek()), RESULT);
            }
          return CUP$Analisis_Sintactico$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 23: // M4 ::= UsuarioModificacion MayorQue Identificador 
            {
              String RESULT =null;

              CUP$Analisis_Sintactico$result = parser.getSymbolFactory().newSymbol("M4",23, ((java_cup.runtime.Symbol)CUP$Analisis_Sintactico$stack.elementAt(CUP$Analisis_Sintactico$top-2)), ((java_cup.runtime.Symbol)CUP$Analisis_Sintactico$stack.peek()), RESULT);
            }
          return CUP$Analisis_Sintactico$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 22: // M4 ::= FechaModificacion MayorQue Fecha 
            {
              String RESULT =null;

              CUP$Analisis_Sintactico$result = parser.getSymbolFactory().newSymbol("M4",23, ((java_cup.runtime.Symbol)CUP$Analisis_Sintactico$stack.elementAt(CUP$Analisis_Sintactico$top-2)), ((java_cup.runtime.Symbol)CUP$Analisis_Sintactico$stack.peek()), RESULT);
            }
          return CUP$Analisis_Sintactico$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 21: // M4 ::= FechaCreacion MayorQue Fecha 
            {
              String RESULT =null;

              CUP$Analisis_Sintactico$result = parser.getSymbolFactory().newSymbol("M4",23, ((java_cup.runtime.Symbol)CUP$Analisis_Sintactico$stack.elementAt(CUP$Analisis_Sintactico$top-2)), ((java_cup.runtime.Symbol)CUP$Analisis_Sintactico$stack.peek()), RESULT);
            }
          return CUP$Analisis_Sintactico$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 20: // M4 ::= UsuarioCreacion MayorQue Identificador 
            {
              String RESULT =null;

              CUP$Analisis_Sintactico$result = parser.getSymbolFactory().newSymbol("M4",23, ((java_cup.runtime.Symbol)CUP$Analisis_Sintactico$stack.elementAt(CUP$Analisis_Sintactico$top-2)), ((java_cup.runtime.Symbol)CUP$Analisis_Sintactico$stack.peek()), RESULT);
            }
          return CUP$Analisis_Sintactico$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 19: // M4 ::= Id MayorQue Identificador 
            {
              String RESULT =null;
		 parser.manejador.enviarObligatorioNSW("ID"); 
              CUP$Analisis_Sintactico$result = parser.getSymbolFactory().newSymbol("M4",23, ((java_cup.runtime.Symbol)CUP$Analisis_Sintactico$stack.elementAt(CUP$Analisis_Sintactico$top-2)), ((java_cup.runtime.Symbol)CUP$Analisis_Sintactico$stack.peek()), RESULT);
            }
          return CUP$Analisis_Sintactico$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 18: // M5 ::= M5 MenorQue Parametro Nombre Igual M4 MenorQue Diagonal Parametro MayorQue 
            {
              String RESULT =null;

              CUP$Analisis_Sintactico$result = parser.getSymbolFactory().newSymbol("M5",24, ((java_cup.runtime.Symbol)CUP$Analisis_Sintactico$stack.elementAt(CUP$Analisis_Sintactico$top-9)), ((java_cup.runtime.Symbol)CUP$Analisis_Sintactico$stack.peek()), RESULT);
            }
          return CUP$Analisis_Sintactico$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 17: // M5 ::= MenorQue Parametro Nombre Igual M4 MenorQue Diagonal Parametro MayorQue 
            {
              String RESULT =null;

              CUP$Analisis_Sintactico$result = parser.getSymbolFactory().newSymbol("M5",24, ((java_cup.runtime.Symbol)CUP$Analisis_Sintactico$stack.elementAt(CUP$Analisis_Sintactico$top-8)), ((java_cup.runtime.Symbol)CUP$Analisis_Sintactico$stack.peek()), RESULT);
            }
          return CUP$Analisis_Sintactico$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 16: // NSW1 ::= MenorQue Parametros MayorQue M5 MenorQue Diagonal Parametros MayorQue 
            {
              String RESULT =null;

              CUP$Analisis_Sintactico$result = parser.getSymbolFactory().newSymbol("NSW1",18, ((java_cup.runtime.Symbol)CUP$Analisis_Sintactico$stack.elementAt(CUP$Analisis_Sintactico$top-7)), ((java_cup.runtime.Symbol)CUP$Analisis_Sintactico$stack.peek()), RESULT);
            }
          return CUP$Analisis_Sintactico$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 15: // estructuraNuevoSitioWeb ::= MenorQue Accion Nombre Igual NuevoSitioWeb NT$0 MayorQue NSW1 MenorQue Diagonal Accion MayorQue 
            {
              String RESULT =null;
              // propagate RESULT from NT$0
                RESULT = (String) ((java_cup.runtime.Symbol) CUP$Analisis_Sintactico$stack.elementAt(CUP$Analisis_Sintactico$top-6)).value;

              CUP$Analisis_Sintactico$result = parser.getSymbolFactory().newSymbol("estructuraNuevoSitioWeb",2, ((java_cup.runtime.Symbol)CUP$Analisis_Sintactico$stack.elementAt(CUP$Analisis_Sintactico$top-11)), ((java_cup.runtime.Symbol)CUP$Analisis_Sintactico$stack.peek()), RESULT);
            }
          return CUP$Analisis_Sintactico$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 14: // NT$0 ::= 
            {
              String RESULT =null;
 parser.manejador.inicializarObligatoriosNSW(); 
              CUP$Analisis_Sintactico$result = parser.getSymbolFactory().newSymbol("NT$0",41, ((java_cup.runtime.Symbol)CUP$Analisis_Sintactico$stack.peek()), ((java_cup.runtime.Symbol)CUP$Analisis_Sintactico$stack.peek()), RESULT);
            }
          return CUP$Analisis_Sintactico$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 13: // MX3 ::= estructuraModificarComponente 
            {
              String RESULT =null;

              CUP$Analisis_Sintactico$result = parser.getSymbolFactory().newSymbol("MX3",7, ((java_cup.runtime.Symbol)CUP$Analisis_Sintactico$stack.peek()), ((java_cup.runtime.Symbol)CUP$Analisis_Sintactico$stack.peek()), RESULT);
            }
          return CUP$Analisis_Sintactico$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 12: // MX3 ::= estructuraModificarPagina 
            {
              String RESULT =null;

              CUP$Analisis_Sintactico$result = parser.getSymbolFactory().newSymbol("MX3",7, ((java_cup.runtime.Symbol)CUP$Analisis_Sintactico$stack.peek()), ((java_cup.runtime.Symbol)CUP$Analisis_Sintactico$stack.peek()), RESULT);
            }
          return CUP$Analisis_Sintactico$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 11: // MX3 ::= estructuraAgregarComponente 
            {
              String RESULT =null;

              CUP$Analisis_Sintactico$result = parser.getSymbolFactory().newSymbol("MX3",7, ((java_cup.runtime.Symbol)CUP$Analisis_Sintactico$stack.peek()), ((java_cup.runtime.Symbol)CUP$Analisis_Sintactico$stack.peek()), RESULT);
            }
          return CUP$Analisis_Sintactico$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 10: // MX3 ::= estructuraBorrarComponente 
            {
              String RESULT =null;

              CUP$Analisis_Sintactico$result = parser.getSymbolFactory().newSymbol("MX3",7, ((java_cup.runtime.Symbol)CUP$Analisis_Sintactico$stack.peek()), ((java_cup.runtime.Symbol)CUP$Analisis_Sintactico$stack.peek()), RESULT);
            }
          return CUP$Analisis_Sintactico$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 9: // MX3 ::= estructuraBorrarPagina 
            {
              String RESULT =null;

              CUP$Analisis_Sintactico$result = parser.getSymbolFactory().newSymbol("MX3",7, ((java_cup.runtime.Symbol)CUP$Analisis_Sintactico$stack.peek()), ((java_cup.runtime.Symbol)CUP$Analisis_Sintactico$stack.peek()), RESULT);
            }
          return CUP$Analisis_Sintactico$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 8: // MX3 ::= estructuraBorrarSitioWeb 
            {
              String RESULT =null;

              CUP$Analisis_Sintactico$result = parser.getSymbolFactory().newSymbol("MX3",7, ((java_cup.runtime.Symbol)CUP$Analisis_Sintactico$stack.peek()), ((java_cup.runtime.Symbol)CUP$Analisis_Sintactico$stack.peek()), RESULT);
            }
          return CUP$Analisis_Sintactico$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 7: // MX3 ::= estructuraNuevoSitioWeb 
            {
              String RESULT =null;

              CUP$Analisis_Sintactico$result = parser.getSymbolFactory().newSymbol("MX3",7, ((java_cup.runtime.Symbol)CUP$Analisis_Sintactico$stack.peek()), ((java_cup.runtime.Symbol)CUP$Analisis_Sintactico$stack.peek()), RESULT);
            }
          return CUP$Analisis_Sintactico$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 6: // MX3 ::= estructuraNuevaPagina 
            {
              String RESULT =null;

              CUP$Analisis_Sintactico$result = parser.getSymbolFactory().newSymbol("MX3",7, ((java_cup.runtime.Symbol)CUP$Analisis_Sintactico$stack.peek()), ((java_cup.runtime.Symbol)CUP$Analisis_Sintactico$stack.peek()), RESULT);
            }
          return CUP$Analisis_Sintactico$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 5: // M3 ::= M3 MX3 
            {
              String RESULT =null;

              CUP$Analisis_Sintactico$result = parser.getSymbolFactory().newSymbol("M3",22, ((java_cup.runtime.Symbol)CUP$Analisis_Sintactico$stack.elementAt(CUP$Analisis_Sintactico$top-1)), ((java_cup.runtime.Symbol)CUP$Analisis_Sintactico$stack.peek()), RESULT);
            }
          return CUP$Analisis_Sintactico$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 4: // M3 ::= MX3 
            {
              String RESULT =null;

              CUP$Analisis_Sintactico$result = parser.getSymbolFactory().newSymbol("M3",22, ((java_cup.runtime.Symbol)CUP$Analisis_Sintactico$stack.peek()), ((java_cup.runtime.Symbol)CUP$Analisis_Sintactico$stack.peek()), RESULT);
            }
          return CUP$Analisis_Sintactico$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 3: // M1 ::= MX3 
            {
              String RESULT =null;

              CUP$Analisis_Sintactico$result = parser.getSymbolFactory().newSymbol("M1",21, ((java_cup.runtime.Symbol)CUP$Analisis_Sintactico$stack.peek()), ((java_cup.runtime.Symbol)CUP$Analisis_Sintactico$stack.peek()), RESULT);
            }
          return CUP$Analisis_Sintactico$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 2: // M1 ::= MenorQue Acciones MayorQue M3 MenorQue Diagonal Acciones MayorQue 
            {
              String RESULT =null;

              CUP$Analisis_Sintactico$result = parser.getSymbolFactory().newSymbol("M1",21, ((java_cup.runtime.Symbol)CUP$Analisis_Sintactico$stack.elementAt(CUP$Analisis_Sintactico$top-7)), ((java_cup.runtime.Symbol)CUP$Analisis_Sintactico$stack.peek()), RESULT);
            }
          return CUP$Analisis_Sintactico$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 1: // GENESIS ::= M1 
            {
              String RESULT =null;
		int aleft = ((java_cup.runtime.Symbol)CUP$Analisis_Sintactico$stack.peek()).left;
		int aright = ((java_cup.runtime.Symbol)CUP$Analisis_Sintactico$stack.peek()).right;
		String a = (String)((java_cup.runtime.Symbol) CUP$Analisis_Sintactico$stack.peek()).value;
		 System.out.println(" -------------- Lectura de documento XML terminada.  -------------- "); 
              CUP$Analisis_Sintactico$result = parser.getSymbolFactory().newSymbol("GENESIS",0, ((java_cup.runtime.Symbol)CUP$Analisis_Sintactico$stack.peek()), ((java_cup.runtime.Symbol)CUP$Analisis_Sintactico$stack.peek()), RESULT);
            }
          return CUP$Analisis_Sintactico$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 0: // $START ::= GENESIS EOF 
            {
              Object RESULT =null;
		int start_valleft = ((java_cup.runtime.Symbol)CUP$Analisis_Sintactico$stack.elementAt(CUP$Analisis_Sintactico$top-1)).left;
		int start_valright = ((java_cup.runtime.Symbol)CUP$Analisis_Sintactico$stack.elementAt(CUP$Analisis_Sintactico$top-1)).right;
		String start_val = (String)((java_cup.runtime.Symbol) CUP$Analisis_Sintactico$stack.elementAt(CUP$Analisis_Sintactico$top-1)).value;
		RESULT = start_val;
              CUP$Analisis_Sintactico$result = parser.getSymbolFactory().newSymbol("$START",0, ((java_cup.runtime.Symbol)CUP$Analisis_Sintactico$stack.elementAt(CUP$Analisis_Sintactico$top-1)), ((java_cup.runtime.Symbol)CUP$Analisis_Sintactico$stack.peek()), RESULT);
            }
          /* ACCEPT */
          CUP$Analisis_Sintactico$parser.done_parsing();
          return CUP$Analisis_Sintactico$result;

          /* . . . . . .*/
          default:
            throw new Exception(
               "Invalid action number found in internal parse table");

        }
    }
}

