/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package gui.ventanas;

import backend.analizadores.*;
import backend.objetos.*;
import java.io.BufferedReader;
import java.io.File;
import java.io.FileNotFoundException;
import java.io.FileReader;
import java.io.IOException;
import java.io.StringReader;
import java.text.SimpleDateFormat;
import java.util.Date;
import java.util.Observable;
import java.util.Observer;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.JFileChooser;
import javax.swing.JOptionPane;
import javax.swing.JTextArea;
import javax.swing.filechooser.FileNameExtensionFilter;
import javax.swing.text.BadLocationException;
import javax.swing.text.JTextComponent;
import javax.swing.text.Utilities;

/**
 *
 * @author jonyasus
 */
public class Principal extends javax.swing.JFrame implements Observer {

    ManejadorCliente manejador;

    /**
     * Creates new form Principal
     */
    public Principal() {
        initComponents();
        fechaTextField.setText(fechaActual());
        this.setLocationRelativeTo(null);
        this.getRootPane().setDefaultButton(this.enviarButton);
        Servidor s = new Servidor(5000);
        s.addObserver(this);
        Thread t = new Thread(s);
        t.start();
        manejador = new ManejadorCliente(this.editarXMLTextArea, this.erroesTextArea, this.servidorTextArea, this);
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jScrollPane1 = new javax.swing.JScrollPane();
        editarXMLTextArea = new javax.swing.JTextArea();
        analizarButton = new javax.swing.JButton();
        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();
        PathTextfield = new javax.swing.JTextField();
        jScrollPane2 = new javax.swing.JScrollPane();
        erroesTextArea = new javax.swing.JTextArea();
        jScrollPane3 = new javax.swing.JScrollPane();
        servidorTextArea = new javax.swing.JTextArea();
        jLabel5 = new javax.swing.JLabel();
        jLabel6 = new javax.swing.JLabel();
        jLabel7 = new javax.swing.JLabel();
        fechaNoEditableLabel = new javax.swing.JLabel();
        fechaTextField = new javax.swing.JTextField();
        usuarioActualLabel = new javax.swing.JLabel();
        enviarButton = new javax.swing.JButton();
        anuncioErroresLabel = new javax.swing.JLabel();
        jMenuBar1 = new javax.swing.JMenuBar();
        jMenu1 = new javax.swing.JMenu();
        openXmlMenuItem = new javax.swing.JMenuItem();
        exitMenuItem = new javax.swing.JMenuItem();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setTitle("Editor XML | Compiladores 1");

        editarXMLTextArea.setColumns(20);
        editarXMLTextArea.setRows(5);
        editarXMLTextArea.addCaretListener(new javax.swing.event.CaretListener() {
            public void caretUpdate(javax.swing.event.CaretEvent evt) {
                editarXMLTextAreaCaretUpdate(evt);
            }
        });
        editarXMLTextArea.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                editarXMLTextAreaKeyTyped(evt);
            }
        });
        jScrollPane1.setViewportView(editarXMLTextArea);

        analizarButton.setText("Analizar");
        analizarButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                analizarButtonActionPerformed(evt);
            }
        });

        jLabel3.setText("Fila");

        jLabel4.setText("Columna");

        PathTextfield.setEditable(false);

        erroesTextArea.setEditable(false);
        erroesTextArea.setBackground(new java.awt.Color(51, 51, 51));
        erroesTextArea.setColumns(20);
        erroesTextArea.setForeground(new java.awt.Color(255, 255, 255));
        erroesTextArea.setRows(5);
        jScrollPane2.setViewportView(erroesTextArea);

        servidorTextArea.setEditable(false);
        servidorTextArea.setBackground(new java.awt.Color(204, 255, 0));
        servidorTextArea.setColumns(20);
        servidorTextArea.setForeground(new java.awt.Color(0, 0, 0));
        servidorTextArea.setRows(5);
        jScrollPane3.setViewportView(servidorTextArea);

        jLabel5.setText("Mensajes del Servidor:");

        jLabel6.setText("Editor XML:");

        jLabel7.setText("Errores:");

        fechaNoEditableLabel.setText("Fecha Actual:");

        fechaTextField.setEditable(false);

        enviarButton.setText("Enviar a Manejador");
        enviarButton.setEnabled(false);
        enviarButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                enviarButtonActionPerformed(evt);
            }
        });

        anuncioErroresLabel.setForeground(new java.awt.Color(255, 0, 51));

        jMenu1.setText("File");

        openXmlMenuItem.setText("Open XML");
        openXmlMenuItem.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                openXmlMenuItemActionPerformed(evt);
            }
        });
        jMenu1.add(openXmlMenuItem);

        exitMenuItem.setText("Exit");
        exitMenuItem.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                exitMenuItemActionPerformed(evt);
            }
        });
        jMenu1.add(exitMenuItem);

        jMenuBar1.add(jMenu1);

        setJMenuBar(jMenuBar1);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(PathTextfield)
                    .addComponent(jScrollPane3)
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(analizarButton, javax.swing.GroupLayout.PREFERRED_SIZE, 103, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(jLabel4)
                                    .addComponent(jLabel3))
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 24, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(jLabel2, javax.swing.GroupLayout.PREFERRED_SIZE, 20, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addGap(106, 106, 106)
                                .addComponent(fechaNoEditableLabel)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(usuarioActualLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 173, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(fechaTextField, javax.swing.GroupLayout.PREFERRED_SIZE, 106, javax.swing.GroupLayout.PREFERRED_SIZE)))
                            .addComponent(jLabel6))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 181, Short.MAX_VALUE)
                        .addComponent(enviarButton))
                    .addComponent(jLabel5)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jScrollPane1)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(jLabel7)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(anuncioErroresLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 184, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 361, javax.swing.GroupLayout.PREFERRED_SIZE))))
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(18, 18, 18)
                .addComponent(PathTextfield, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                                .addComponent(analizarButton, javax.swing.GroupLayout.PREFERRED_SIZE, 47, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGroup(layout.createSequentialGroup()
                                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                        .addComponent(jLabel3, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                        .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 15, javax.swing.GroupLayout.PREFERRED_SIZE))
                                    .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                        .addComponent(jLabel4, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                        .addComponent(jLabel2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))))
                            .addGroup(layout.createSequentialGroup()
                                .addGap(6, 6, 6)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                    .addComponent(fechaNoEditableLabel)
                                    .addComponent(fechaTextField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(usuarioActualLabel)))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel6)
                            .addComponent(jLabel7)))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(enviarButton)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(anuncioErroresLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 18, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jScrollPane2, javax.swing.GroupLayout.DEFAULT_SIZE, 283, Short.MAX_VALUE)
                    .addComponent(jScrollPane1))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jLabel5)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jScrollPane3, javax.swing.GroupLayout.PREFERRED_SIZE, 133, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap())
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void analizarButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_analizarButtonActionPerformed
        enviarButton.setEnabled(false);
        anuncioErroresLabel.setText("");
        erroesTextArea.setText("");
        servidorTextArea.setText("");
        manejador.analizarTexto(editarXMLTextArea.getText());
        manejador.verificarObligatorioNSW();
        manejador.verificarObligatorioNPW();
        System.out.println("--------------------------------------------------------------------------------------------------------------");
        if (erroesTextArea.getText().isEmpty() && editarXMLTextArea.getText().isEmpty()) {
            enviarButton.setEnabled(false);
        } else if (erroesTextArea.getText().isEmpty() && editarXMLTextArea.getText().isEmpty() == false){
            enviarButton.setEnabled(true);
             JOptionPane.showMessageDialog(null, "Documento XML sin errores.");
            anuncioErroresLabel.setText("Sin errores en el XML.");
        }
    }//GEN-LAST:event_analizarButtonActionPerformed


    private void editarXMLTextAreaCaretUpdate(javax.swing.event.CaretEvent evt) {//GEN-FIRST:event_editarXMLTextAreaCaretUpdate
        int pos = evt.getDot();
        try {
            int row = editarXMLTextArea.getLineOfOffset(pos) + 1;
            int col = pos - editarXMLTextArea.getLineStartOffset(row - 1) + 1;
            jLabel1.setText(row + "");
            jLabel2.setText(col + "");
        } catch (BadLocationException exc) {
            System.out.println(exc);
        }
    }//GEN-LAST:event_editarXMLTextAreaCaretUpdate


    private void editarXMLTextAreaKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_editarXMLTextAreaKeyTyped

    }//GEN-LAST:event_editarXMLTextAreaKeyTyped

    private void openXmlMenuItemActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_openXmlMenuItemActionPerformed
        ImportarArchivo();
    }//GEN-LAST:event_openXmlMenuItemActionPerformed

    private void exitMenuItemActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_exitMenuItemActionPerformed
        System.exit(0);
    }//GEN-LAST:event_exitMenuItemActionPerformed

    private void enviarButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_enviarButtonActionPerformed
                String mensaje = editarXMLTextArea.getText();
                String mensajeCliente = "Cliente: Mensaje enviado al Manejador. Esperando respuesta... \n";
        this.servidorTextArea.append(mensajeCliente);

        Cliente c = new Cliente(6000, mensaje);
        Thread t = new Thread(c);
        t.start();
        enviarButton.setEnabled(false);
    }//GEN-LAST:event_enviarButtonActionPerformed

    public static String fechaActual() {
        Date fecha = new Date();
            SimpleDateFormat formatoFecha = new SimpleDateFormat("YYYY-MM-dd");
            return formatoFecha.format(fecha);
    }
    
    private void ImportarArchivo() {
        PathTextfield.setText("");
        editarXMLTextArea.setText("");
        JFileChooser fileChooser = new JFileChooser();
        fileChooser.setDialogTitle("Importar");
        //Aqui se filtraran los archivos por su extension. Unicamente permitiraobservar archivos txt
        FileNameExtensionFilter filtro = new FileNameExtensionFilter("Archivos txt", "txt");
        fileChooser.setFileFilter(filtro);
        //condición para verificar si selecciona algún archivo
        if (fileChooser.showOpenDialog(this) == JFileChooser.APPROVE_OPTION) {
            File fichero = fileChooser.getSelectedFile();

            String pathArchivo = fileChooser.getSelectedFile().getPath();
            PathTextfield.setText(pathArchivo);
            try {
                try (BufferedReader reader = new BufferedReader(new FileReader(fichero))) {
                    String lineaTotal = "";
                    String linea = reader.readLine();
                    while (linea != null) {
                        lineaTotal = lineaTotal + linea + System.getProperty("line.separator");
                        linea = reader.readLine();
                    }
                    editarXMLTextArea.setText(lineaTotal);
                    reader.close();
                }
            } catch (FileNotFoundException ex) {
                Logger.getLogger(Principal.class.getName()).log(Level.SEVERE, null, ex);
            } catch (IOException ex) {
                Logger.getLogger(Principal.class.getName()).log(Level.SEVERE, null, ex);
            }
        } else {
            JOptionPane.showMessageDialog(this, "No importaste ningun archivo", "Sin importacion", JOptionPane.INFORMATION_MESSAGE);
        }
    }


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JTextField PathTextfield;
    private javax.swing.JButton analizarButton;
    private javax.swing.JLabel anuncioErroresLabel;
    private javax.swing.JTextArea editarXMLTextArea;
    private javax.swing.JButton enviarButton;
    private javax.swing.JTextArea erroesTextArea;
    private javax.swing.JMenuItem exitMenuItem;
    private javax.swing.JLabel fechaNoEditableLabel;
    private javax.swing.JTextField fechaTextField;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JMenu jMenu1;
    private javax.swing.JMenuBar jMenuBar1;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JScrollPane jScrollPane3;
    private javax.swing.JMenuItem openXmlMenuItem;
    private javax.swing.JTextArea servidorTextArea;
    private javax.swing.JLabel usuarioActualLabel;
    // End of variables declaration//GEN-END:variables

    @Override
    public void update(Observable o, Object arg) {
        this.servidorTextArea.append((String) arg);
    }

}
